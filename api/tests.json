{
    "expressions": {
        "comparisons": {
            "ends-with": "{% if 'Templates' ends with 's' %}\n\"Templates\" ends with \"s\"\n{% endif %}",
            "equal-to": "{% if varX == varY %}\n`varX` is equal to `varY`\n{% endif %}",
            "greater-than-or-equal": "{% if 2 >= 1 %}\n2 is greater than or equal to 1\n{% endif %}\n\n{% if 2 >= 1 %}\n2 is greater than or equal to 2\n{% endif %}",
            "greater-than": "{% if 2 > 1 %}\n2 is greater than 1\n{% endif %}",
            "less-than-or-equal": "{% if 1 <= 2 %}\n1 is less than or equal to 2\n{% endif %}\n\n{% if 1 <= 1 %}\n1 is less than or equal to 1\n{% endif %}",
            "less-than": "{% if 1 < 2 %}\n1 is less than 2\n{% endif %}",
            "matches": "{% if phone matches '/^[\\\\d\\\\.]+$/' %}\n`phone` is a valid phone number\n{% endif %}",
            "not-equal-to": "{% if varX != varY %}\n`varX` is not equal to `varY`\n{% endif %}",
            "starts-with": "{% if 'Templates' starts with 'T' %}\n\"Templates\" starts with \"T\"\n{% endif %}",
            "strict-equal-to": "{% if 1234 === 1234 %}\n1234 not strict equal to 1234\n{% endif %}",
            "strict-not-equal-to": "{% if 1234 !== '1234' %}\n1234 is not strict equal to '1234'\n{% endif %}"
        },
        "math": {
            "addition": "{{ 2 + 3 }}",
            "devision": "{{ 10/5 }}",
            "multiplication": "{{ 5*2 }}",
            "power": "{{ 2**3 }}",
            "subtraction": "{{ 5 - 3 }}"
        },
        "reserved-words": {
            "function": "{{ function }}",
            "var": "{{ var }}"
        }
    },
    "filters": {
        "abs": {
            "negative-float": "{{ -3.14|abs }}",
            "negative-integer": "{{ -3|abs }}",
            "positive-float": "{{ 3.14|abs }}",
            "positive-integer": "{{ 3|abs }}",
            "string": "{{ '-3.14'|abs }}",
            "variable": "{{ x|abs }}",
            "zero": "{{ 0|abs }}"
        },
        "batch": {
            "size-and-fill": "{% for row in items|batch(3, '-') -%}\n    {% for column in row %} {{ column }} {% endfor %} |\n{% endfor %}",
            "size-only": "{% for row in items|batch(3) -%}\n    {% for column in row %} {{ column }} {% endfor %} |\n{% endfor %}"
        },
        "capitalize": {
            "array": "{{ items|capitalize }}",
            "mixed-case": "{{ 'my First cAR'|capitalize }}",
            "number": "{{ 5|capitalize }}",
            "sentence": "{{ 'my first car'|capitalize }}",
            "starts-with-number": "{{ '2nd car'|capitalize }}",
            "word": "{{ 'car'|capitalize }}"
        },
        "center": {
            "default": "<pre>{{ 'x'|center }}</pre>",
            "width-20": "<pre>{{ 'x'|center(20) }}</pre>"
        },
        "default": {
            "alias-d": "{{ varX|d('\"varX\" is not defined') }}",
            "empty-string-strict": "{{ ''|default('passed string is empty', true)  }}",
            "empty-string": "{{ ''|default('passed string is empty')  }}",
            "undefined-property-bracket-notation": "{{ vars['x']|default('\"x\" on \"vars\" is not defined') }}",
            "undefined-property-dot-notation": "{{ vars.x|default('\"x\" on \"vars\" is not defined') }}\n",
            "undefined-variable": "{{ varX|default('\"varX\" is not defined') }}"
        },
        "dictsort": {
            "by-value": "{%- for key, value in items | dictsort(false, 'value') -%}\n{{ value }}:{{ key }}\n{% endfor %}",
            "case-insensitive": "{%- for key, value in items | dictsort(false) -%}\n{{ key }}\n{% endfor %}",
            "case-sensitive": "{%- for key, value in items | dictsort(true) -%}\n{{ key }}\n{% endfor %}",
            "default": "{%- for key, value in items | dictsort -%}\n{{ key }}\n{% endfor %}"
        },
        "escape": {
            "alias-e": "{{ '<html>'|e }}",
            "default": "{{ '<html>'|escape }}",
            "double-escape": "{{ '<html>'|escape|escape }}"
        },
        "filesizeformat": {
            "binary": "{{ 0|filesizeformat(true) }}\n{{ 1|filesizeformat(true) }}\n{{ 2|filesizeformat(true) }}\n{{ 10|filesizeformat(true) }}\n{{ 100|filesizeformat(true) }}\n{{ 1000|filesizeformat(true) }}\n{{ 1000000|filesizeformat(true) }}\n{{ 1000000000|filesizeformat(true) }}\n{{ 1000000000000|filesizeformat(true) }}",
            "default": "{{ 0|filesizeformat }}\n{{ 1|filesizeformat }}\n{{ 2|filesizeformat }}\n{{ 10|filesizeformat }}\n{{ 100|filesizeformat }}\n{{ 1000|filesizeformat }}\n{{ 1000000|filesizeformat }}\n{{ 1000000000|filesizeformat }}\n{{ 1000000000000|filesizeformat }}"
        },
        "first": {
            "array": "{{ [1, 2, 3, 4]|first }}",
            "number": "{{ 1234|first }}",
            "object": "{{ { a: 1, b: 2, c: 3, d: 4 }|first }}",
            "string": "{{ '1234'|first }}"
        },
        "float": {
            "custom-fallback": "{{ \"\"|float(0.5) }}",
            "float": "{{ 3.52|float }}",
            "force-fallback": "{{ \"\"|float }}",
            "integer": "{{ 3|float }}",
            "string": "{{ \"3.52\"|float }}"
        },
        "indent": {
            "custom-spacing": "{{ \"one\\ntwo\\nthree\" | indent(6) }}",
            "default": "{{ \"one\\ntwo\\nthree\" | indent }}",
            "include-first-line": "{{ \"one\\ntwo\\nthree\" | indent(6, true) }}"
        },
        "int": {
            "base-16": "{{ \"0x4d32\"|int(0, 16) }}",
            "base-8": "{{ \"011\"|int(0, 8) }}",
            "custom-fallback": "{{ \"\"|int(5) }}",
            "float": "{{ 3.52|int }}",
            "force-fallback": "{{ \"\"|int }}",
            "integer": "{{ 3|int }}",
            "string": "{{ \"3.52\"|int }}"
        },
        "last": {
            "array-as-variable": "{{ items|last }}",
            "array": "{{ [1, 2, 3, 4]|last }}",
            "number": "{{ 1234|last }}",
            "object": "{{ { a: 1, b: 2, c: 3, d: 4 }|last }}",
            "string": "{{ '1234'|last }}"
        },
        "length": {
            "array": "{{ [1, 2, 3, 4]|length }}",
            "number": "{{ 1234|length }}",
            "object": "{{ { a: 1, b: 2, c: 3, d: 4 }|length }}",
            "string": "{{ '1234'|length }}"
        },
        "lower": {
            "array": "{{ items|lower }}",
            "number": "{{ 5|lower }}",
            "string": "{{ 'My FIRST Car'|lower }}"
        },
        "upper": {
            "array": "{{ items|upper }}",
            "number": "{{ 5|upper }}",
            "string": "{{ 'My first CAR'|upper }}"
        }
    },
    "tags": {
        "if": {
            "true-capitalized": "{% if True %}True{% endif %}",
            "true-variable": "{% if varX %}true{% endif %}",
            "true": "{% if true %}true{% endif %}"
        },
        "raw": {
            "broken-expression": "{% raw %}{{ x }{% endraw %}",
            "broken-tag": "{% raw %}{% if i_am_stupid }Still do your job well{% endraw %}",
            "comment": "{% raw %}{# test {% endraw %}",
            "multiline": "\n{% raw %}{{ varX }}{% endraw %}\n{{ varY }}\n{% raw %}\n    {{ varZ }}\n{% endraw %}",
            "multiple": "{% raw %}{{ varX }}{% endraw %}{{ varY }}{% raw %}{{ varZ }}{% endraw %}",
            "nested-raw": "{% raw %}{% raw %}{{ x }{% endraw %}{% endraw %}",
            "tag": "{% raw %}hello {{ {% %} }}{% endraw %}",
            "text": "{% raw %}abc{% endraw %}"
        }
    }
}